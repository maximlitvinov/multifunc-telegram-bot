require('dotenv').config();
const { default: axios } = require('axios');
const TelegramBot = require('node-telegram-bot-api');

const token = process.env.TOKEN_API;
const bot = new TelegramBot(token, {polling: true});

bot.setMyCommands([
  {command:'/start', description:'–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'},
  {command:'/info', description:'–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ'},
  {command:'/weather', description:'–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã'}
])




bot.on('message', async msg => {
    const text = msg.text;
    const name = msg.from.first_name;
    const lastName = msg.from.last_name;
    const userName = msg.from.username;
    const chatId = msg.chat.id;
    const lang = msg.from.language_code;

    console.log(msg);
   
   async function botStart(){

    function unkownMessage(text){
      if (text === '/weather'){
        bot.sendMessage(chatId, '–ü—Ä–∏—à–ª–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ');
     }
      else{
      bot.sendMessage(chatId, `${name}, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é... `)
      return bot.sendVideo(chatId,'https://media.tenor.com/s5FIe_do3HIAAAAd/%D0%BA%D0%BE%D1%82-%D1%87%D0%B0%D0%B2%D0%BA%D0%B0%D0%B5%D1%82.gif')
    }
    }

    async function getWeather(){
        cityAPI =`http://api.openweathermap.org/geo/1.0/direct?q=${text}&limit=5&appid=${process.env.WEATHER_API}`;

        const responseCity= await axios.get(cityAPI);
        console.log(responseCity.data[0])
        const {lat, lon} = responseCity.data[0];
        const nameOfCity = responseCity.data[0].local_names?.ru;

        const weatherAPI = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.WEATHER_API}`;
        const responseWeather = await axios.get(weatherAPI);
      
      const {temp, feels_like,pressure} = responseWeather.data.main;
      

      bot.sendMessage(chatId, `–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${nameOfCity}, —Å–µ–π—á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${Math.round(temp-273.15)} ¬∫C, –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${Math.round(feels_like-273.15)} ¬∫C, –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –î–∞–≤–ª–µ–Ω–∏–µ: ${pressure*0.75} –º–º.—Ä—Ç.—Å—Ç`)
        
    }

    if(text === '/start'){
      await bot.sendMessage(chatId,`–ü—Ä–∏–≤–µ—Ç ${name}, –ú–µ–Ω—è –∑–æ–≤—É—Ç –±–æ—Ç-–ò–≥–Ω–∞—Ç–∏–∫üê±, —è –º–æ–≥—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –Ω–∞–ø–∏—à–∏ "/weather" –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –µ—ë –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥!`);
      return bot.sendSticker(chatId, 'https://cdn.tlgrm.app/stickers/22c/b26/22cb267f-a2ab-41e4-8360-fe35ac048c3b/192/8.webp');
     }
   
    if(text === '/info'){
      await bot.sendMessage(chatId,'–ü–æ–≥–æ–¥–∏, —Å–æ–±–∏—Ä–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–±–µ');
      await bot.sendSticker(chatId,'https://cdn.tlgrm.app/stickers/b0d/85f/b0d85fbf-de1b-4aaf-836c-1cddaa16e002/thumb-animated-128.mp4');
      return bot.sendMessage(chatId, `–¢–µ–±—è –∑–æ–≤—É—Ç ${name}, —Ç–≤–æ—è —Ñ–∞–º–∏–ª–∏—è - ${lastName}, —Ç–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - ${userName}, —Ç–≤–æ–π —è–∑—ã–∫ - ${lang} `)
    }


      const regexpForWeather = /^[a-zA-Z]+$/;
       const validMessage = regexpForWeather.test(text);
      

       if (validMessage){
        return getWeather();
       }
      //  else {
      //   return bot.sendMessage(chatId,'–í—ã –≤–≤–µ–ª–∏ –≥–æ—Ä–æ–¥ –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ, –∞ –Ω–∞–¥–æ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ');
      // }
      
    
    return unkownMessage(text) ;
   }

botStart()
  
   
})

